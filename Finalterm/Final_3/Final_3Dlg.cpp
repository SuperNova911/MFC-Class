
// Final_3Dlg.cpp : 구현 파일
//

#include "stdafx.h"
#include "Final_3.h"
#include "Final_3Dlg.h"
#include "afxdialogex.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// 응용 프로그램 정보에 사용되는 CAboutDlg 대화 상자입니다.

class CAboutDlg : public CDialogEx
{
public:
	CAboutDlg();

// 대화 상자 데이터입니다.
	enum { IDD = IDD_ABOUTBOX };

	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV 지원입니다.

// 구현입니다.
protected:
	DECLARE_MESSAGE_MAP()
};

CAboutDlg::CAboutDlg() : CDialogEx(CAboutDlg::IDD)
{
}

void CAboutDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
}

BEGIN_MESSAGE_MAP(CAboutDlg, CDialogEx)
END_MESSAGE_MAP()


// CFinal_3Dlg 대화 상자




CFinal_3Dlg::CFinal_3Dlg(CWnd* pParent /*=NULL*/)
	: CDialogEx(CFinal_3Dlg::IDD, pParent)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
	m_strText = _T("");
	m_strSelectedNode = _T("");
}

void CFinal_3Dlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_TREE_CONTROL, m_treeControl);
	DDX_Text(pDX, IDC_EDIT_TEXT, m_strText);
	DDX_Text(pDX, IDC_EDIT_SELECTED_NODE, m_strSelectedNode);
}

BEGIN_MESSAGE_MAP(CFinal_3Dlg, CDialogEx)
	ON_WM_SYSCOMMAND()
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_BN_CLICKED(IDC_BUTTON_INSERT, &CFinal_3Dlg::OnClickedButtonInsert)
	ON_BN_CLICKED(IDC_BUTTON_DELETE, &CFinal_3Dlg::OnClickedButtonDelete)
	ON_NOTIFY(TVN_SELCHANGED, IDC_TREE_CONTROL, &CFinal_3Dlg::OnSelchangedTreeControl)
END_MESSAGE_MAP()


// CFinal_3Dlg 메시지 처리기

BOOL CFinal_3Dlg::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	// 시스템 메뉴에 "정보..." 메뉴 항목을 추가합니다.

	// IDM_ABOUTBOX는 시스템 명령 범위에 있어야 합니다.
	ASSERT((IDM_ABOUTBOX & 0xFFF0) == IDM_ABOUTBOX);
	ASSERT(IDM_ABOUTBOX < 0xF000);

	CMenu* pSysMenu = GetSystemMenu(FALSE);
	if (pSysMenu != NULL)
	{
		BOOL bNameValid;
		CString strAboutMenu;
		bNameValid = strAboutMenu.LoadString(IDS_ABOUTBOX);
		ASSERT(bNameValid);
		if (!strAboutMenu.IsEmpty())
		{
			pSysMenu->AppendMenu(MF_SEPARATOR);
			pSysMenu->AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu);
		}
	}

	// 이 대화 상자의 아이콘을 설정합니다. 응용 프로그램의 주 창이 대화 상자가 아닐 경우에는
	//  프레임워크가 이 작업을 자동으로 수행합니다.
	SetIcon(m_hIcon, TRUE);			// 큰 아이콘을 설정합니다.
	SetIcon(m_hIcon, FALSE);		// 작은 아이콘을 설정합니다.

	// TODO: 여기에 추가 초기화 작업을 추가합니다.
	m_hRoot = m_treeControl.InsertItem(TEXT("컴퓨터와 인터넷"), 0, TVI_LAST);
	m_hKind[0] = m_treeControl.InsertItem(TEXT("IT 전문서"), m_hRoot, TVI_LAST);
	m_hKind[1] = m_treeControl.InsertItem(TEXT("그래픽/멀티미디어"), m_hRoot, TVI_LAST);
	m_hKind[2] = m_treeControl.InsertItem(TEXT("오피스활용도서"), m_hRoot, TVI_LAST);
	m_hKind[3] = m_treeControl.InsertItem(TEXT("웹/컴퓨터 입문&활용"), m_hRoot, TVI_LAST);

	m_treeControl.Expand(m_hRoot, TVE_EXPAND);

	return TRUE;  // 포커스를 컨트롤에 설정하지 않으면 TRUE를 반환합니다.
}

void CFinal_3Dlg::OnSysCommand(UINT nID, LPARAM lParam)
{
	if ((nID & 0xFFF0) == IDM_ABOUTBOX)
	{
		CAboutDlg dlgAbout;
		dlgAbout.DoModal();
	}
	else
	{
		CDialogEx::OnSysCommand(nID, lParam);
	}
}

// 대화 상자에 최소화 단추를 추가할 경우 아이콘을 그리려면
//  아래 코드가 필요합니다. 문서/뷰 모델을 사용하는 MFC 응용 프로그램의 경우에는
//  프레임워크에서 이 작업을 자동으로 수행합니다.

void CFinal_3Dlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 그리기를 위한 디바이스 컨텍스트입니다.

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 클라이언트 사각형에서 아이콘을 가운데에 맞춥니다.
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 아이콘을 그립니다.
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialogEx::OnPaint();
	}
}

// 사용자가 최소화된 창을 끄는 동안에 커서가 표시되도록 시스템에서
//  이 함수를 호출합니다.
HCURSOR CFinal_3Dlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}



void CFinal_3Dlg::OnClickedButtonInsert()
{
	UpdateData(true);

	if (m_strText.IsEmpty())
	{
		AfxMessageBox(TEXT("아이템을 입력하세요."));
	}
	else
	{
		if (AfxMessageBox(TEXT("입력하시겠습니까?"), MB_YESNO | MB_ICONQUESTION) == IDYES)
		{
			m_treeControl.InsertItem(m_strText, m_hSelectItem, TVI_LAST);
			m_treeControl.Expand(m_hSelectItem, TVE_EXPAND);

			m_strText.Empty();
		}
	}

	UpdateData(false);
}


void CFinal_3Dlg::OnClickedButtonDelete()
{
	if (m_hSelectItem == m_hRoot)
	{
		AfxMessageBox(TEXT("루트 노드는 삭제하면 안됩니다."));
	}
	else
	{
		if (AfxMessageBox(TEXT("삭제하시겠습니까?"), MB_YESNO | MB_ICONQUESTION) == IDYES)
		{
			m_treeControl.DeleteItem(m_hSelectItem);
		}
	}
}


void CFinal_3Dlg::OnSelchangedTreeControl(NMHDR *pNMHDR, LRESULT *pResult)
{
	LPNMTREEVIEW pNMTreeView = reinterpret_cast<LPNMTREEVIEW>(pNMHDR);

	m_hSelectItem = pNMTreeView->itemNew.hItem;

	m_strSelectedNode = m_treeControl.GetItemText(m_hSelectItem);

	UpdateData(false);

	*pResult = 0;
}
